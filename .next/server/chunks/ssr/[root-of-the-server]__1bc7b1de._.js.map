{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Macintosh%20HD%20-%20Data/%20IT%20Project/Goit/Next.js/07-routing-nextjs/lib/api.ts"],"sourcesContent":["import axios from \"axios\";\nimport type { NewNoteData, Note } from \"@/types/note\";\n\nfunction createAxiosInstance() {\n  const token = process.env.NEXT_PUBLIC_NOTEHUB_TOKEN;\n\n  if (!token) {\n    console.warn(\"NEXT_PUBLIC_NOTEHUB_TOKEN не задан в .env.local\");\n  }\n\n  return axios.create({\n    baseURL: \"https://notehub-public.goit.study/api\",\n    headers: token\n      ? { Authorization: `Bearer ${token}` }\n      : undefined,\n  });\n}\n\nexport interface FetchNotesResponse {\n  notes: Note[];\n  totalPages: number;\n}\n\nexport const fetchNotes = async (\n  page = 1,\n  perPage = 12,\n  search = \"\",\n  tag?: string\n): Promise<FetchNotesResponse> => {\n  const instance = createAxiosInstance();\n\n  const params: Record<string, string | number> = { page, perPage };\n\n  if (search.trim() !== \"\") {\n    params.search = search.trim();\n  }\n\n  if (tag) {\n    params.tag = tag;\n  }\n\n  const res = await instance.get<FetchNotesResponse>(\"/notes\", { params });\n  return res.data;\n};\n\nexport const addNote = async (newNote: NewNoteData): Promise<Note> => {\n  const instance = createAxiosInstance();\n  const res = await instance.post<Note>(\"/notes\", newNote);\n  return res.data;\n};\n\nexport const deleteNote = async (id: string): Promise<Note> => {\n  const instance = createAxiosInstance();\n  const res = await instance.delete<Note>(`/notes/${id}`);\n  return res.data;\n};\n\nexport const fetchNoteById = async (id: string): Promise<Note> => {\n  const instance = createAxiosInstance();\n  const res = await instance.get<Note>(`/notes/${id}`);\n  return res.data;\n};\n"],"names":[],"mappings":";;;;;;AAAA;;AAGA,SAAS;IACP,MAAM;IAEN;;IAIA,OAAO,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;QAClB,SAAS;QACT,SAAS,uCACL;YAAE,eAAe,CAAC,OAAO,EAAE,OAAO;QAAC,IACnC;IACN;AACF;AAOO,MAAM,aAAa,OACxB,OAAO,CAAC,EACR,UAAU,EAAE,EACZ,SAAS,EAAE,EACX;IAEA,MAAM,WAAW;IAEjB,MAAM,SAA0C;QAAE;QAAM;IAAQ;IAEhE,IAAI,OAAO,IAAI,OAAO,IAAI;QACxB,OAAO,MAAM,GAAG,OAAO,IAAI;IAC7B;IAEA,IAAI,KAAK;QACP,OAAO,GAAG,GAAG;IACf;IAEA,MAAM,MAAM,MAAM,SAAS,GAAG,CAAqB,UAAU;QAAE;IAAO;IACtE,OAAO,IAAI,IAAI;AACjB;AAEO,MAAM,UAAU,OAAO;IAC5B,MAAM,WAAW;IACjB,MAAM,MAAM,MAAM,SAAS,IAAI,CAAO,UAAU;IAChD,OAAO,IAAI,IAAI;AACjB;AAEO,MAAM,aAAa,OAAO;IAC/B,MAAM,WAAW;IACjB,MAAM,MAAM,MAAM,SAAS,MAAM,CAAO,CAAC,OAAO,EAAE,IAAI;IACtD,OAAO,IAAI,IAAI;AACjB;AAEO,MAAM,gBAAgB,OAAO;IAClC,MAAM,WAAW;IACjB,MAAM,MAAM,MAAM,SAAS,GAAG,CAAO,CAAC,OAAO,EAAE,IAAI;IACnD,OAAO,IAAI,IAAI;AACjB","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Macintosh%20HD%20-%20Data/%20IT%20Project/Goit/Next.js/07-routing-nextjs/app/notes/filter/%5B...slug%5D/Notes.client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/notes/filter/[...slug]/Notes.client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/notes/filter/[...slug]/Notes.client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+S,GAC5U,6EACA","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Macintosh%20HD%20-%20Data/%20IT%20Project/Goit/Next.js/07-routing-nextjs/app/notes/filter/%5B...slug%5D/Notes.client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/notes/filter/[...slug]/Notes.client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/notes/filter/[...slug]/Notes.client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2R,GACxT,yDACA","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///Volumes/Macintosh%20HD%20-%20Data/%20IT%20Project/Goit/Next.js/07-routing-nextjs/app/notes/filter/%5B...slug%5D/page.tsx"],"sourcesContent":["import NoteList from '@/components/NoteList/NoteList';\nimport { fetchNotes} from '@/lib/api';\nimport React from 'react';\nimport NotesClient from './Notes.client';\n\ntype Props = {\n    params: Promise <{slug: string[]}>\n}\n\nconst NotesByCategory = async ({\n    params\n}: Props) => {\n    const { slug } = await params;\n    const tag = slug[0] === 'All' ? undefined : slug[0]\n    const response = await fetchNotes(1, 12, '', tag);\n  return (\n    <div>\n                <h1>{tag}</h1>\n      {response?.notes?.length > 0 && <NotesClient initialData={response} tagId={ tag} />}\n    </div>\n  );\n};\n\nexport default NotesByCategory;"],"names":[],"mappings":";;;;AACA;AAEA;;;;AAMA,MAAM,kBAAkB,OAAO,EAC3B,MAAM,EACF;IACJ,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM;IACvB,MAAM,MAAM,IAAI,CAAC,EAAE,KAAK,QAAQ,YAAY,IAAI,CAAC,EAAE;IACnD,MAAM,WAAW,MAAM,CAAA,GAAA,0GAAA,CAAA,aAAU,AAAD,EAAE,GAAG,IAAI,IAAI;IAC/C,qBACE,8OAAC;;0BACW,8OAAC;0BAAI;;;;;;YACd,UAAU,OAAO,SAAS,mBAAK,8OAAC,4JAAA,CAAA,UAAW;gBAAC,aAAa;gBAAU,OAAQ;;;;;;;;;;;;AAGlF;uCAEe","debugId":null}}]
}